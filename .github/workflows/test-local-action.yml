name: Test Local Action

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-outputs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
      
      # Test the action with the fix
      - name: Test mitmproxy action
        id: mitmproxy
        uses: ./
        with:
          enabled: true
          listen-host: '127.0.0.1'
          listen-port: '8080'
          install-cacert: true
          set-envvars: true
          passphrase: 'test-passphrase-12345'
      
      # Test that outputs are accessible
      - name: Test outputs
        run: |
          echo "Testing outputs..."
          echo "proxy-url output: '${{ steps.mitmproxy.outputs.proxy-url }}'"
          echo "stream-file output: '${{ steps.mitmproxy.outputs.stream-file }}'"
          echo "cacert-path output: '${{ steps.mitmproxy.outputs.cacert-path }}'"
          
          # Check if proxy-url is not empty
          if [ -z "${{ steps.mitmproxy.outputs.proxy-url }}" ]; then
            echo "❌ ERROR: proxy-url is empty!"
            exit 1
          else
            echo "✅ SUCCESS: proxy-url is set to: ${{ steps.mitmproxy.outputs.proxy-url }}"
          fi
          
          # Check if cacert-path output exists (should be set even if empty)
          echo "✅ SUCCESS: cacert-path output is available: '${{ steps.mitmproxy.outputs.cacert-path }}'"
          
          # Test that environment variables are set (when set-envvars=true)
          echo "Testing environment variables..."
          if [ -z "$http_proxy" ]; then
            echo "❌ ERROR: http_proxy environment variable not set!"
            exit 1
          else
            echo "✅ SUCCESS: http_proxy is set to: $http_proxy"
          fi
          
          if [ -z "$https_proxy" ]; then
            echo "❌ ERROR: https_proxy environment variable not set!"
            exit 1
          else
            echo "✅ SUCCESS: https_proxy is set to: $https_proxy"
          fi
          
          # Only check CURL_OPTIONS on Windows runners
          if [ "${{ runner.os }}" = "Windows" ]; then
            if [ -z "$CURL_OPTIONS" ]; then
              echo "❌ ERROR: CURL_OPTIONS environment variable not set!"
              exit 1
            else
              echo "✅ SUCCESS: CURL_OPTIONS is set to: $CURL_OPTIONS"
            fi
          else
            echo "ℹ️ Skipping CURL_OPTIONS check on non-Windows runner (${{ runner.os }})"
          fi
          
          # Test that we can use the proxy URL
          export HTTP_PROXY="${{ steps.mitmproxy.outputs.proxy-url }}"
          export HTTPS_PROXY="${{ steps.mitmproxy.outputs.proxy-url }}"
          echo "HTTP_PROXY=$HTTP_PROXY"
          echo "HTTPS_PROXY=$HTTPS_PROXY"
          
          # Make a test request through the proxy
          echo "Testing HTTP request through proxy..."
          curl -x "${{ steps.mitmproxy.outputs.proxy-url }}" --connect-timeout 10 http://httpbin.org/get || echo "Request failed (expected if mitmdump isn't fully ready)"

  test-set-envvars-disabled:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
      
      # Test the action with set-envvars disabled
      - name: Test mitmproxy action with set-envvars=false
        id: mitmproxy-no-envvars
        uses: ./
        with:
          enabled: true
          listen-host: '127.0.0.1'
          listen-port: '8080'
          install-cacert: false
          set-envvars: false
          passphrase: 'test-passphrase-12345'
      
      # Test that outputs are accessible but env vars are not set
      - name: Test outputs without environment variables
        run: |
          echo "Testing outputs when set-envvars=false..."
          echo "proxy-url output: '${{ steps.mitmproxy-no-envvars.outputs.proxy-url }}'"
          echo "stream-file output: '${{ steps.mitmproxy-no-envvars.outputs.stream-file }}'"
          echo "cacert-path output: '${{ steps.mitmproxy-no-envvars.outputs.cacert-path }}'"
          
          # Check if proxy-url is not empty
          if [ -z "${{ steps.mitmproxy-no-envvars.outputs.proxy-url }}" ]; then
            echo "❌ ERROR: proxy-url is empty!"
            exit 1
          else
            echo "✅ SUCCESS: proxy-url is set to: ${{ steps.mitmproxy-no-envvars.outputs.proxy-url }}"
          fi
          
          echo "✅ SUCCESS: All outputs are working when set-envvars=false"